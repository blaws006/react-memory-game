{"version":3,"sources":["components/img/220px-Cloud_Strife.png","components/img/220px-Lara_Croft_(2013).png","components/img/250px-SuperMarioParty_DonkeyKong.png","components/img/aloy.jpg","components/img/char-mario-action.png","components/img/dante.jpg","components/img/kratos.jpg","components/img/lozbotw-link-and-bow.jpg","components/img/Metroidprime3_1.png","components/img/NathanDrake-U4.jpg","components/img/Ryu_TvC.png","components/img/sonic.jpg","components/Header/Header.js","components/Banner/Banner.js","components/Image/Image.js","components/Footer/Footer.js","components/Body/Body.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","href","current","high","Banner","Image","key","name","src","url","alt","title","onClick","gameController","Footer","Body","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageShuffle","list","state","i","length","j","Math","floor","random","temp","setState","clickedList","clickedImg","target","includes","alert","updateTopScore","reset","updateCurrentScore","push","bind","assertThisInitialized","cloud","lara","dk","aloy","mario","dante","kratos","link","samus","drake","ryu","sonic","currentScore","topScore","_this2","rowOne","slice","map","image","Image_Image","rowTwo","rowThree","Header_Header","Banner_Banner","Footer_Footer","React","Component","ReactDOM","render","components_Body_Body","document","getElementById"],"mappings":"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","file":"static/js/main.f7c6a38f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/220px-Cloud_Strife.a48f5637.png\";","module.exports = __webpack_public_path__ + \"static/media/220px-Lara_Croft_(2013).e5abfda8.png\";","module.exports = __webpack_public_path__ + \"static/media/250px-SuperMarioParty_DonkeyKong.05afd3d1.png\";","module.exports = __webpack_public_path__ + \"static/media/aloy.c9f0356e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/char-mario-action.65c77ff9.png\";","module.exports = __webpack_public_path__ + \"static/media/dante.4cf73a24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kratos.5b160113.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lozbotw-link-and-bow.bb221e95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Metroidprime3_1.b70c631d.png\";","module.exports = __webpack_public_path__ + \"static/media/NathanDrake-U4.37e184e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ryu_TvC.4afbb0be.png\";","module.exports = __webpack_public_path__ + \"static/media/sonic.52428ade.jpg\";","import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"light-blue darken-3\">\r\n      <div className=\"container-wide\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <a href=\"/\" className=\"logo\">\r\n              Memory Game\r\n            </a>\r\n          </div>\r\n          <div className=\"col s12 m6\">\r\n            <div className=\"right\">\r\n              <ul>\r\n                <li>Your Score: {props.current}</li>\r\n                <li>&nbsp; | &nbsp;</li>\r\n                <li>High Score: {props.high}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction Banner() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"banner col s12 m12 l12\">\r\n        <h1 className=\"center-align white-text\">\r\n          Welcome to the Memory Game\r\n        </h1>\r\n        <h2 className=\"center-align white-text\">\r\n          Can you get the high score???\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\r\n\r\nfunction Image(props) {\r\n  return (\r\n    <div key={props.name} className=\"col s3 m3 l3 center\">\r\n      <img\r\n        src={props.url}\r\n        alt={props.name}\r\n        title={props.name}\r\n        className=\"responsive-img\"\r\n        onClick={props.gameController}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image;","import React from 'react';\r\nimport '../../index.css'\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page-footer light-blue darken-3\">\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n          <div className=\"col l6 s12\">\r\n            <h5 className=\"white-text\">Memory Game</h5>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <div className=\"footer-copyright\">\r\n        <div className=\"container\">\r\n          Â© 2019 Brandon Lawson\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport cloud from \"../img/220px-Cloud_Strife.png\";\r\nimport lara from \"../img/220px-Lara_Croft_(2013).png\";\r\nimport dk from \"../img/250px-SuperMarioParty_DonkeyKong.png\";\r\nimport aloy from \"../img/aloy.jpg\";\r\nimport mario from \"../img/char-mario-action.png\";\r\nimport dante from \"../img/dante.jpg\";\r\nimport kratos from \"../img/kratos.jpg\";\r\nimport link from \"../img/lozbotw-link-and-bow.jpg\";\r\nimport samus from \"../img/Metroidprime3_1.png\";\r\nimport drake from \"../img/NathanDrake-U4.jpg\";\r\nimport ryu from \"../img/Ryu_TvC.png\";\r\nimport sonic from \"../img/sonic.jpg\";\r\nimport Header from \"../Header/Header\";\r\nimport Banner from \"../Banner/Banner\";\r\nimport Image from '../Image/Image'\r\nimport Footer from \"../Footer/Footer\";\r\n\r\n// Create a list\r\n// Shuffle the list\r\n// Make images shuffle onClick\r\n\r\nclass Body extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gameController = this.gameController.bind(this)\r\n    this.state = {\r\n      list: [\r\n        { name: \"Cloud Strife\", url: cloud },\r\n        { name: \"Lara Croft\", url: lara },\r\n        { name: \"Donkey Kong\", url: dk },\r\n        { name: \"Aloy\", url: aloy },\r\n        { name: \"Mario\", url: mario },\r\n        { name: \"Dante\", url: dante },\r\n        { name: \"Kratos\", url: kratos },\r\n        { name: \"Link\", url: link },\r\n        { name: \"Samus Aran\", url: samus },\r\n        { name: \"Nathan Drake\", url: drake },\r\n        { name: \"Ryu\", url: ryu },\r\n        { name: \"Sonic the Hedgehog\", url: sonic }\r\n      ],\r\n      clickedList: [],\r\n      currentScore: 0,\r\n      topScore: 0,\r\n      \r\n    };\r\n  }\r\n\r\n  // Body's images shuffle around once the component mounts\r\n  componentDidMount() {\r\n    this.imageShuffle();\r\n  }\r\n\r\n  // Every time the Body component updates, it checks if you gain the high score\r\n  componentDidUpdate() {\r\n    if (this.state.currentScore === 12) {\r\n      alert(\"You win\");\r\n      this.updateTopScore();\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  // Update's the progress of game if user has guessed correctly\r\n  updateCurrentScore() {\r\n    this.setState(state => {\r\n      state.currentScore++;\r\n    });\r\n  }\r\n\r\n  // Once the game's over, this function checks to see if you topped the previous high score\r\n  updateTopScore() {\r\n    if (\r\n      this.state.topScore === 0 ||\r\n      this.state.topScore <= this.state.currentScore\r\n    ) {\r\n      this.setState(state => {\r\n        state.topScore = state.currentScore;\r\n      });\r\n    }\r\n  }\r\n\r\n  // This function resets the Game settings if the game ends\r\n  reset() {\r\n    this.setState({\r\n      currentScore: 0\r\n    });\r\n    this.setState({\r\n      clickedList: []\r\n    });\r\n    this.imageShuffle();\r\n  }\r\n\r\n  // Shuffles the images in the array which does the same on screen.\r\n  imageShuffle = () => {\r\n    var list = this.state.list;\r\n    for (var i = list.length - 1; i > 0; i--) {\r\n      var j = Math.floor(Math.random() * (i + 1));\r\n      var temp = list[i];\r\n      list[i] = list[j];\r\n      list[j] = temp;\r\n    }\r\n    this.setState(state => ({\r\n      list: state.list\r\n    }));\r\n  };\r\n\r\n  // Controlls the win loss logic and pushes correctly guessed images to evaluate against\r\n  gameController = props => {\r\n    const clickedList = this.state.clickedList;\r\n    const clickedImg = props.target.src;\r\n    if (!clickedList.includes(clickedImg)) {\r\n      this.imageShuffle();\r\n      this.updateCurrentScore();\r\n      clickedList.push(clickedImg);\r\n    } else {\r\n      alert(\"You lost\");\r\n      this.updateTopScore();\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // Made three rows worth of images .slice takes 4 images out of the array .map lays out the 4 picked\r\n    const rowOne = this.state.list.slice(0, 4).map(image =>\r\n      <Image key={image.name} name={image.name} url={image.url} alt={image.name} title={image.name} gameController={this.gameController} /> \r\n      )\r\n    const rowTwo = this.state.list.slice(4, 8).map(image =>\r\n      <Image key={image.name} name={image.name} url={image.url} alt={image.name} title={image.name} gameController={this.gameController} /> \r\n    )\r\n    const rowThree = this.state.list.slice(8, 12).map(image =>\r\n      <Image key={image.name} name={image.name} url={image.url} alt={image.name} title={image.name} gameController={this.gameController} /> \r\n    )\r\n    return (\r\n      <div className=\"page-wrapper\">\r\n        <Header current={this.state.currentScore} high={this.state.topScore} />\r\n        <Banner />\r\n        <div className=\"container content\">\r\n          <div className=\"row\">{rowOne}</div>\r\n          <div className=\"row\">\r\n            {rowTwo}\r\n          </div>\r\n          <div className=\"row\">\r\n            {rowThree}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Body from './components/Body/Body'\nimport \"./index.css\";\n\nReactDOM.render(<Body />, document.getElementById(\"root\"));\n"],"sourceRoot":""}